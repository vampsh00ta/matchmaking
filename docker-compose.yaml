version: '3.8'
services:
  app:
    build:
      context: .
    image: app_matchmaking
    env_file:
      - .env
    ports:
      - "50501:50501"
    restart: always
    depends_on:
      db:
        condition: service_healthy

    networks:
      - db
  db:
    image: postgres:14.6
    restart: always
    container_name: db_matchmaking
    hostname: db_matchmaking
    environment:
      POSTGRES_DB: "rating"
      POSTGRES_USER: "rating"
      POSTGRES_PASSWORD: "rating"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U rating" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - db
  redis:
    image: redis:latest
    restart: always
    ports:
      - "63790:6379"
    environment:
      - REDIS_PASSWORD=""
      - REDIS_PORT=6379
      - REDIS_DATABASES=0
    healthcheck:
      test: [ "CMD-SHELL", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
  migrate:
    image: migrate/migrate
    container_name: db_migrations
    networks:
      - db
    volumes:
      - ./migration:/migration
    links:
      - db
    command: -path=./migration -database postgres://rating:rating@db:5432/rating?sslmode=disable up
networks:
  db:
    driver: bridge
volumes:
  postgres_data:
